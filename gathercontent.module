<?php
/**
 * @file
 * Imports pages from GatherContent (http://gathercontent.com/) into Drupal as 
 * nodes.
 *
 * @TODO code efficiency can probably be improved quite a bit 
 * (for example, batch operation for node creation, OOP vs procedural, ...).
 * 
 * @TODO form elements in tableselect form: is this possible/usable at all? 
 * Ie. is there a way to use the form data?
 * 
 * @TODO Move GatherContent API functions to its own file (for example, 
 * gathercontent_api.inc).
 * 
 * @TODO etc etc etc ... See issue queue. Patches welcome!
 */


/**
 * Implements hook_help().
 */
function gathercontent_help($path, $arg) {
  // @TODO help.
}

/**
 * Implements hook_menu().
 */
function gathercontent_menu() {
  $items = array(
    'admin/config/content/gathercontent' => array(
      'title' => 'GatherContent',
      'description' => 'Import pages from GatherContent.',
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('administer gathercontent'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
    ),
    'admin/config/content/gathercontent/settings' => array(
      'title' => 'Settings',
      'description' => 'Administer GatherContent settings.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gathercontent_api_admin'),
      'access arguments' => array('administer gathercontent'),
      'file' => 'gathercontent_admin.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
    'admin/config/content/gathercontent/import' => array(
      'title' => 'Import pages',
      'description' => 'Import pages from GatherContent.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gathercontent_import_form'),
      'access arguments' => array('administer gathercontent'),
      'type' => MENU_NORMAL_ITEM,
    ),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function gathercontent_permission() {
  return array(
    'administer gathercontent' => array(
      'title' => t('Administer GatherContent'),
      'description' => t('Change settings and import pages from GatherContent'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Import form.
 * In the 7.x version of this module, this used to be a CTools multistep form.
 * In D8, this could become a multistep form once https://drupal.org/node/1886616 gets in.
 */
function gathercontent_import_form($js = NULL, $step = NULL) {
  $gathercontent = new Drupal\gathercontent\GatherContentPages;
  // Let's do some error handling first.
  $account_name = variable_get('gathercontent_account_name');
  $api_key = variable_get('gathercontent_api_key');
  $project_id = variable_get('gathercontent_project_id');
  // Build an array of available GatherContent projects, if any.
  $projects = gathercontent_get_command('get_projects');
  $projects_list = gathercontent_projects_list($projects);
  if (empty($account_name) || empty($api_key)) {
    drupal_set_message(t('Please <a href="/admin/config/content/gathercontent/settings">enter your GatherContent account name and API key</a> before continuing.'), 'warning', FALSE);
  }
  if (!empty($account_name) && !empty($api_key)) {
    if (isset($projects->success) && $projects->success == TRUE) {
      if (empty($project_id) || !array_key_exists($project_id, $projects_list)) {
        drupal_set_message(t('Please <a href="/admin/config/content/gathercontent/settings">select one of your available GatherContent projects</a> before continuing.'), 'warning', FALSE);
      }
    }
    elseif (isset($projects->is_error) && $projects->is_error == TRUE) {
      drupal_set_message(t('It looks like you didn\'t configure any GatherContent projects yet. <a href="@gc_link">Please do so first</a>, then <a href="/admin/config/content/gathercontent/settings">select it here</a> before continuing with your import.', array('@gc_link' => 'https://' . $account_name . '.gathercontent.com/')), 'warning', FALSE);
    }
  }
  
  $project_id = variable_get('gathercontent_project_id');
  $pages = $gathercontent::getPages($project_id);

  // Build table header.
  $header = array(
    'title' => t('Page title'),
    // @TODO: Major todo: figure out if there's way to use form elements in a
    // tableselect form. It's possible to display them, but seems impossible to
    // actually use the form data.
    // 'page_name' => t('Page title'),
    // 'overwrite_id' => t('Overwrite?'),
    // 'main_content' => t('Fields'),
  );

  $options = array();
  $rows = $gathercontent::pageImportForm($pages, $options);
  $form['#prefix'] = '<p>' . t("Select the page(s) you want to import. Then, click the 'Import pages' button at the bottom of this page.") . '</p>';
  $form['pages_list'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $rows,
    '#empty' => t('No pages found.'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Import pages'),
  );
  $form['#submit'][] = 'gathercontent_import_pages_submit';
  
  return $form;
}

/**
 * Form submit handler.
 */
function gathercontent_import_pages_submit($form, &$form_state) {
  $gathercontent = new Drupal\gathercontent\GatherContentPages;
  $content_type = variable_get('gathercontent_content_type');
  // Get rid of unchecked rows.
  $page_ids = array_filter($form_state['values']['pages_list']);
  $gathercontent::createNodes($page_ids, $content_type);
}

/**
 * Connecting to the GatherContent API. Data retrieved as JSON.
 */
function gathercontent_get_command($command = '', $postfields = array(), $account_name = '', $api_key = '') {
  if ($account_name == '') {
    $account_name = variable_get('gathercontent_account_name');
  }
  if ($api_key == '') {
    $api_key = variable_get('gathercontent_api_key');
  }
  $api_url = 'https://' . $account_name . '.gathercontent.com/api/0.2/' . $command;
  $postfields = http_build_query($postfields);
  // Using cURL, since GatherContent's API requires Digest authentication,
  // and drupal_http_request() doesn't support that
  // (see https://drupal.org/node/289820).
  $session = curl_init();
  curl_setopt($session, CURLOPT_URL, $api_url);
  curl_setopt($session, CURLOPT_HTTPAUTH, CURLAUTH_DIGEST);
  curl_setopt($session, CURLOPT_HEADER, FALSE);
  curl_setopt($session, CURLOPT_HTTPHEADER, array('Accept: application/json', 'Content-Type: application/x-www-form-urlencoded'));
  curl_setopt($session, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($session, CURLOPT_USERPWD, $api_key . ":x");
  curl_setopt($session, CURLOPT_POST, TRUE);
  curl_setopt($session, CURLOPT_POSTFIELDS, $postfields);
  curl_setopt($session, CURLOPT_SSL_VERIFYPEER, TRUE);
  $response = curl_exec($session);
  $httpcode = curl_getinfo($session, CURLINFO_HTTP_CODE);
  curl_close($session);
  try {
    $resp = json_decode($response);
    if (isset($resp->success) && $resp->success === TRUE) {
      return $resp;
    }
    elseif (isset($resp->error)) {
      if ($resp->error == 'You have to log in.') {
        $error = 'login_error';
      }
      return gathercontent_error_return($resp->error);
    }
    else {
      return gathercontent_error_return('login_error');
    }
  }
  catch (Exception $e) {
    return gathercontent_error_return('There was a problem contacting the API. Please check your server allows it.');
  }
  return FALSE;
}

/**
 * GatherContent API error handling.
 */
function gathercontent_error_return($msg) {
  $cls = new stdClass();
  $cls->is_error = TRUE;
  if ($msg == 'login_error') {
    $cls->error = t('There was a problem contacting the API. Please check your API credentials.');
  }
  else {
    $cls->error = $msg;
  }
  return $cls;
}

/**
 * Build an array of available GatherContent projects.
 */
function gathercontent_projects_list($projects) {
  $projects_list = array();
  if (is_object($projects) && isset($projects->projects) && is_array($projects->projects)) {
    foreach ($projects->projects as $project) {
      $projects_list[$project->id] = $project->name;
    }
    asort($projects_list);
  }
  return $projects_list;
}
